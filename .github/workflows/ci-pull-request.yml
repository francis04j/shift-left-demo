name: CI Pull Request

on:
  pull_request:
    branches: [ main ]

  workflow_dispatch:

env:
  image-name: ghcr.io/francis04j/shift-left-demo:${{ github.sha }}
  image-name-unit-tests: ghcr.io/francis04j/shift-demo-unit-tests:latest

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: App [build]
        run: docker build -t ${{ env.image-name }} .

      - name: App [scan]
        uses: azure/container-scan@v0
        with:
          image-name: ${{ env.image-name }}
          severity-threshold: MEDIUM
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_CR }}

      - name: Unit tests [build]
        run: docker build --target unit-test -t ${{ env.image-name-unit-tests }} .

      - name: Unit tests [run]
        run: docker run --rm -v ${{ github.workspace }}/path/to/artifacts/testresults:/code/test/DanApi.UnitTests/TestResults ${{ env.image-name-unit-tests }}

      # TODO: revisit and fix this
     # /home/runner/work/shift-left-demo/shift-left-demo/cc-reporter format-coverage /home/runner/work/shift-left-demo/shift-left-demo/path/to/artifacts/testresults/coverage.info -t lcov -o codeclimate.0.json
     # Error: could not find coverage info for source files
     # 
     # - name: Code coverage [Code Climate]
     #   uses: paambaati/codeclimate-action@v2.7.5
     #   env:
     #     CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
     #   with:
     #     coverageLocations: ${{ github.workspace }}/path/to/artifacts/testresults/coverage.info:lcov
  infra:
    needs: ci
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.1.0

      - name: Set Pulumi config values
        working-directory: DanApi.infra
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        run: |
          pulumi stack select dev
          pulumi config set DanApi.infra:docker-image ${{ env.image-name }}

      - name: Pulumi Preview
        uses: pulumi/actions@v3.1.0
        with:
          command: preview
          stack-name: dev
          work-dir: DanApi.infra
          github-token: ${{ secrets.GITHUB_TOKEN }}
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        
      - name: App [build]
        run: docker build -t ${{ env.image-name }} .

      - name: App [scan]
        uses: azure/container-scan@v0
        with:
          image-name: ${{ env.image-name }}
          severity-threshold: MEDIUM
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_CR }}
